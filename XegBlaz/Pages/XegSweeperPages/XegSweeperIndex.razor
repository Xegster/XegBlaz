@page "/XegSweeperIndex"

<h3>XegSweeper</h3>
@if (!GameStarted)
{
<div class="container">
	<div class="row">
		<div class="col-lg-4">Difficulty?</div>
	</div>
	<div class="row">
		<div class="col-lg-3"><button class="btn btn-success" @onclick="() => SetSettings(DifficultySettings.Easy)">Easy</button></div>
		<div class="col-lg-3"><button class="btn btn-warning" @onclick="() => SetSettings(DifficultySettings.Medium)">Medium</button></div>
		<div class="col-lg-3"><button class="btn btn-danger" @onclick="() => SetSettings(DifficultySettings.Hard)">Hard</button></div>
		<div class="col-lg-3"><button class="btn btn-primary" @onclick="() => SetCustom()">Custom</button></div>
	</div>
	@if (CurrentSettings != null)
		{
	<div class="row align-content-center align-items-center">
		<div class="col-lg-2 align-content-center align-items-center">
			Width:
		</div>
		<div class="col-lg-3 align-content-center align-items-center">
			<input type="range" min="1" max="100" @onchange="() => SettingsChanged()" @bind="@CurrentSettings.Width" class="mdc-slider" @bind:event="oninput" />
		</div>
		<div class="col-lg-3 align-content-center align-items-center">
			@CurrentSettings.Width
		</div>
	</div>
	<div class="row align-content-center align-items-center">
		<div class="col-lg-2 align-content-center align-items-center">
			Height:
		</div>
		<div class="col-lg-3 align-content-center align-items-center">
			<input type="range" min="1" max="100"  @onchange="() => SettingsChanged()" @bind="@CurrentSettings.Height" class="mdc-slider" @bind:event="oninput" />
		</div>
		<div class="col-lg-3 align-content-center align-items-center">
			@CurrentSettings.Height
		</div>
	</div>
	<div class="row align-content-center align-items-center">
		<div class="col-lg-2 align-content-center align-items-center">
			Mines:
		</div>
		<div class="col-lg-3 align-content-center align-items-center">
			<input type="range" min="1" max="@CurrentSettings.MaxMineCount"  @onchange="() => SettingsChanged()" @bind="@CurrentSettings.MineCount" class="mdc-slider" @bind:event="oninput" />
		</div>
		<div class="col-lg-3 align-content-center align-items-center">
			@CurrentSettings.MineCount
		</div>
	</div>
	<div class="row align-content-center align-items-center">
		<div class="col-lg-2 align-content-center align-items-center">
			Minimum Uncovered Spaces:
		</div>
		<div class="col-lg-3 align-content-center align-items-center">
			<input type="range" min="0" max="@CurrentSettings.MineCount"  @onchange="() => SettingsChanged()" @bind="@CurrentSettings.FreeHits" class="mdc-slider" @bind:event="oninput" />
		</div>
		<div class="col-lg-3 align-content-center align-items-center">
			@CurrentSettings.FreeHits
		</div>
	</div>
	<div class="row align-content-center align-items-center">
		<div class="col-lg-2 align-content-center align-items-center">
			<button class="btn btn-outline-info" @onclick="() => StartGame()">Start</button>
		</div>
	</div>
		}
</div>
}
else
{

	<table class="sweeper">
		@if (Won || Lost)
		{
			<tr class="stats">
				<td class="stats" colspan="@CurrentBoard.MaxWidth">
					@if (Won)
					{
						<p class="result result-win">You Won!</p>
					}
					else if (Lost)
					{
						<p class="result result-lose">You Lost!</p>
					}
				</td>
			</tr>
		}
		<tr class="stats">
			<td class="stats" colspan="@CurrentBoard.MaxWidth">
				<img class="stats" src="\Images\mine.png" />
				<div class="stats-text">@CurrentBoard.RemainingMines</div>
			</td>
		</tr>
		<tr>
			<td class="stats" colspan="@CurrentBoard.MaxWidth">
				<p class="clock @(Lost ? "clock-stopped-lose" : (Won ? "clock-stopped-win" : ""))">@GameTime.ToString(@"dd\.hh\:mm\:ss\:fff")</p>
			</td>
		</tr>
		@for (int r = 0; r < CurrentBoard.MaxHeight; r++)
		{
			var row = r;
			<tr class="sweeper">
				@for (int c = 0; c < CurrentBoard.MaxWidth; c++)
				{
					var col = c;
					<td class="sweeper @(CurrentBoard.Cells[row,col].Covered ? "covered" : "")"
						@onclick="() => Uncover(row,col)"
						@oncontextmenu="(args) => SetFlag(args, row, col)" @oncontextmenu:preventDefault="true">
						@if (CurrentBoard.Cells[row, col].Uncovered && CurrentBoard.Cells[row, col].Bomb)
						{
							<img class="bomb" src="\Images\mine.png" />
						}
						else if (CurrentBoard.Cells[row, col].Uncovered && !CurrentBoard.Cells[row, col].IsEmpty)
						{
							<p class="clue @("clue-" + CurrentBoard.Cells[row, col].Value)">@CurrentBoard.Cells[row, col].Value</p>
						}
						else if (CurrentBoard.Cells[row, col].Flagged)
						{
							<img class="flag" src="\Images\flag.png" />
						}
						@if (Debug && CurrentBoard.Cells[row, col].Bomb)
						{
							<p>B</p>
						}
						else if (Debug)
						{
							<p>@CurrentBoard.Cells[row, col].Value</p>
						}
					</td>
				}
			</tr>
		}
	</table>
	<button class="btn btn-info" @onclick="() => StartOver()">Start Over</button>
}
@code {

}
